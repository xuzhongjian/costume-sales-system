<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjxu97.costume.mapper.CommodityStocksMapper" >
  <resultMap id="BaseResultMap" type="com.zjxu97.costume.entity.CommodityStocks" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="item_id" property="itemId" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, is_deleted, create_at, update_at, store_id, item_id, amount
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from commodity_stocks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from commodity_stocks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zjxu97.costume.entity.CommodityStocks" >
    insert into commodity_stocks (id, is_deleted, create_at, 
      update_at, store_id, item_id, 
      amount)
    values (#{id,jdbcType=INTEGER}, #{isDeleted,jdbcType=TINYINT}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{storeId,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, 
      #{amount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zjxu97.costume.entity.CommodityStocks" >
    insert into commodity_stocks
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="itemId != null" >
        item_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zjxu97.costume.entity.CommodityStocks" >
    update commodity_stocks
    <set >
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="itemId != null" >
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjxu97.costume.entity.CommodityStocks" >
    update commodity_stocks
    set is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      store_id = #{storeId,jdbcType=INTEGER},
      item_id = #{itemId,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>